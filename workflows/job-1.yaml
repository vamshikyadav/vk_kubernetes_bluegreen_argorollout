name: Multi App Version Update (JSON)

on:
  workflow_dispatch:
    inputs:
      app_versions:
        description: "JSON mapping of app->version (e.g. {\"app1\":\"1.0.0\",\"app2\":\"2.1.3\"})"
        required: true
        default: '{"app1":"1.0.0","app2":"2.1.3"}'

jobs:
  build-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Parse JSON into matrix
        id: set-matrix
        run: |
          input='${{ github.event.inputs.app_versions }}'
          echo "ðŸ“¥ Input JSON: $input"
          
          # Convert JSON {"app1":"1.0.0","app2":"2.1.3"}
          # â†’ [{"app":"app1","version":"1.0.0"},{"app":"app2","version":"2.1.3"}]
          json=$(echo "$input" | jq -r 'to_entries | map({app: .key, version: .value})')
          echo "matrix=$json" >> $GITHUB_OUTPUT
          echo "ðŸ“¤ Matrix JSON: $json"

  per-app:
    needs: build-matrix
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include: ${{ fromJson(needs.build-matrix.outputs.matrix) }}
    steps:
      - name: Run commands per app
        run: |
          echo "ðŸ‘‰ Running for ${{ matrix.app }} with version ${{ matrix.version }}"
          # Example repeated steps:
          echo "Building ${{ matrix.app }}..."
          echo "Tagging as version ${{ matrix.version }}"
          echo "Deploying ${{ matrix.app }}:${{ matrix.version }}"
